@mixin hwa() {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000;
  transform: translate3d(0, 0, 0);
}

@mixin hidden() {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}

@mixin standard-spacing() {
  margin-top: 3rem;

  @media screen and (min-width: $desktop) {
    margin-top: 6rem;
  }
}

@mixin central() {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin central-y() {
  top: 50%;
  transform: translateY(-50%);
}

@mixin central-x() {
  left: 50%;
  transform: translateX(-50%);
}

@mixin pseudo-before() {
  &:before {
    content: '';
    display: block;
    position: absolute;
  }
}

@mixin pseudo-after() {
  &:after {
    content: '';
    display: block;
    position: absolute;
  }
}

@mixin pseudo-blocks() {
  &:before,
  &:after {
    content: '';
    display: block;
    position: absolute;
  }
}

@mixin text-link-underline() {
  text-decoration: underline;

  &:hover {
    text-decoration: none;
  }

  &:active {
    text-decoration: underline;
  }
}

@mixin text-link-inverse() {
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }

  &:active {
    text-decoration: none;
  }
}

@mixin nth-of-type($from: 1, $to: 6) {
  @for $i from $from to $to {
    &:nth-of-type(#{$i}) {
      @content;
    }
  }
}

@mixin parallax-down($distance) {
  transform: translateY(calc(var(--scroll) * #{$distance}rem));
}

@mixin parallax($from: 1, $to: 6) {
  will-change: transform;

  @for $i from $from to $to {
    &:nth-of-type(#{$i}) {
      @include parallax-down($i * 20);
    }
  }
}

@mixin stagger($from: 1, $to: 6, $delay: 0.1s) {
  @for $i from $from to $to {
    &:nth-of-type(#{$i}) {
      transition-delay: $i * $delay;
    }
  }
}
